apiVersion: apps/v1
kind: Deployment
metadata:
  name: dana-api
  labels:
    app: dana-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dana-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: dana-api
    spec:
      containers:
      - name: dana-api
        image: ${DOCKER_IMAGE_URL}:${DANA_VERSION}
        args: ["npm", "run", "start:api"]
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "1000m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "2Gi"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: dana-database-credentials
              key: url
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: dana-app-secrets
              key: session-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: dana-app-secrets
              key: openai-api-key
---
apiVersion: v1
kind: Service
metadata:
  name: dana-api-service
spec:
  selector:
    app: dana-api
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dana-api-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.dana-ai.com
    secretName: dana-api-tls
  rules:
  - host: api.dana-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dana-api-service
            port:
              number: 80